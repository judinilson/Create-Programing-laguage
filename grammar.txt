expr        : KEYWORD: VAR IDENTIFIER EQ expr                                       VAR i = 0
            : comp-expr ((KEYWORD: AND| KEYWORD:OR) comp-expr)*                     (4 == 4) AND (5 < 3)

comp-expr   : NOT comp-expr                                                         NOT 1 == 2
            : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*                           4 >= 4


arith-expr  : term ((PLUS|MINUS) term)*                                             (5 * 9) + 4

term        : factor ((MUL|DIV)) factor)*                                           5*4/4

factor      : (PLUS|MINUS) power                                                    4 + 5

power       : call (POW factor)*                                                    3 ^ 5

call        : atom(LPAREN (expr (COMMA expr)*)? RPAREN)?                            call function

atom        : INT|FLOAT|IDENTIFIER
            : LPAREN expr RPAREN                                                    (5 + 4)
            : if-expr
            : for-expr
            : while-expr
            : func-expr


if-expr     : KEYWORD: IF expr KEYWORD: THEN expr
              (KEYWORD: ELIF expr KEYWORD:THEN expr)*
              (KEYWORD:ELSE expr)?


for-expr    : KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr
              (KEYWORD:STEP expr)? KEYWORD:THEN expr


while-expr   : KEYWORD:WHILE expr KEYWORD:THEN expr


func-expr    : KEYWORD: FUNC INDENTIFIER?
               LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
               ARROW expr



